--- a/src/server/scripts/Outland/nagrand.cpp
+++ b/src/server/scripts/Outland/nagrand.cpp
@@ -18,231 +18,26 @@
 
 /* ScriptData
 SDName: Nagrand
-SD%Complete: 90
-SDComment: Quest support: 9849, 9868, 9918, 9874, 9991, 10107, 10108, 10044, 10172, 10646, 10085, 10987. TextId's unknown for altruis_the_sufferer and greatmother_geyah (npc_text)
+SD%Complete: 100
+SDComment: Quest support: 9948, 9868, 9879, 9991, 10044, 10172, 10646, 10085.
 SDCategory: Nagrand
 EndScriptData */
 
 /* ContentData
-mob_shattered_rumbler
-mob_lump
 npc_altruis_the_sufferer
 npc_greatmother_geyah
-npc_lantresor_of_the_blade
 npc_maghar_captive
+npc_kurenai_captive
 npc_creditmarker_visit_with_ancestors
-mob_sparrowhawk
+npc_corki
+go_corkis_prison
+go_warmaul_prison
 EndContentData */
 
 #include "ScriptPCH.h"
 #include "ScriptedEscortAI.h"
 
 /*######
-## mob_shattered_rumbler - this should be done with ACID
-######*/
-
-class mob_shattered_rumbler : public CreatureScript
-{
-public:
-    mob_shattered_rumbler() : CreatureScript("mob_shattered_rumbler") { }
-
-    CreatureAI* GetAI(Creature* creature) const
-    {
-        return new mob_shattered_rumblerAI (creature);
-    }
-
-    struct mob_shattered_rumblerAI : public ScriptedAI
-    {
-        bool Spawn;
-
-        mob_shattered_rumblerAI(Creature* c) : ScriptedAI(c) {}
-
-        void Reset()
-        {
-            Spawn = false;
-        }
-
-        void EnterCombat(Unit* /*who*/) {}
-
-        void SpellHit(Unit* Hitter, const SpellInfo *Spellkind)
-        {
-            if (Spellkind->Id == 32001 && !Spawn)
-            {
-                float x = me->GetPositionX();
-                float y = me->GetPositionY();
-                float z = me->GetPositionZ();
-
-                Hitter->SummonCreature(18181, x+(0.7f * (rand()%30)), y+(rand()%5), z, 0, TEMPSUMMON_CORPSE_TIMED_DESPAWN, 60000);
-                Hitter->SummonCreature(18181, x+(rand()%5), y-(rand()%5), z, 0, TEMPSUMMON_CORPSE_TIMED_DESPAWN, 60000);
-                Hitter->SummonCreature(18181, x-(rand()%5), y+(0.5f *(rand()%60)), z, 0, TEMPSUMMON_CORPSE_TIMED_DESPAWN, 60000);
-                me->setDeathState(CORPSE);
-                Spawn = true;
-            }
-            return;
-        }
-    };
-
-};
-
-/*######
-## mob_lump
-######*/
-
-#define SPELL_VISUAL_SLEEP  16093
-#define SPELL_SPEAR_THROW   32248
-
-#define LUMP_SAY0 -1000190
-#define LUMP_SAY1 -1000191
-
-#define LUMP_DEFEAT -1000192
-
-#define GOSSIP_HL "I need answers, ogre!"
-#define GOSSIP_SL1 "Why are Boulderfist out this far? You know that this is Kurenai territory."
-#define GOSSIP_SL2 "And you think you can just eat anything you want? You're obviously trying to eat the Broken of Telaar."
-#define GOSSIP_SL3 "This means war, Lump! War I say!"
-
-class mob_lump : public CreatureScript
-{
-public:
-    mob_lump() : CreatureScript("mob_lump") { }
-
-    bool OnGossipSelect(Player* player, Creature* creature, uint32 /*uiSender*/, uint32 uiAction)
-    {
-        player->PlayerTalkClass->ClearMenus();
-        switch (uiAction)
-        {
-            case GOSSIP_ACTION_INFO_DEF:
-                player->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_SL1, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 1);
-                player->SEND_GOSSIP_MENU(9353, creature->GetGUID());
-                break;
-            case GOSSIP_ACTION_INFO_DEF+1:
-                player->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_SL2, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 2);
-                player->SEND_GOSSIP_MENU(9354, creature->GetGUID());
-                break;
-            case GOSSIP_ACTION_INFO_DEF+2:
-                player->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_SL3, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 3);
-                player->SEND_GOSSIP_MENU(9355, creature->GetGUID());
-                break;
-            case GOSSIP_ACTION_INFO_DEF+3:
-                player->SEND_GOSSIP_MENU(9356, creature->GetGUID());
-                player->TalkedToCreature(18354, creature->GetGUID());
-                break;
-        }
-        return true;
-    }
-
-    bool OnGossipHello(Player* player, Creature* creature)
-    {
-        if (player->GetQuestStatus(9918) == QUEST_STATUS_INCOMPLETE)
-            player->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_HL, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF);
-
-        player->SEND_GOSSIP_MENU(9352, creature->GetGUID());
-
-        return true;
-    }
-
-    CreatureAI* GetAI(Creature* creature) const
-    {
-        return new mob_lumpAI(creature);
-    }
-
-    struct mob_lumpAI : public ScriptedAI
-    {
-        mob_lumpAI(Creature* c) : ScriptedAI(c)
-        {
-            bReset = false;
-        }
-
-        uint32 Reset_Timer;
-        uint32 Spear_Throw_Timer;
-        bool bReset;
-
-        void Reset()
-        {
-            Reset_Timer = 60000;
-            Spear_Throw_Timer = 2000;
-
-            me->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NON_ATTACKABLE);
-        }
-
-        void AttackedBy(Unit* pAttacker)
-        {
-            if (me->getVictim())
-                return;
-
-            if (me->IsFriendlyTo(pAttacker))
-                return;
-
-            AttackStart(pAttacker);
-        }
-
-        void DamageTaken(Unit* done_by, uint32 & damage)
-        {
-            if (done_by->GetTypeId() == TYPEID_PLAYER && me->HealthBelowPctDamaged(30, damage))
-            {
-                if (!bReset && CAST_PLR(done_by)->GetQuestStatus(9918) == QUEST_STATUS_INCOMPLETE)
-                {
-                    //Take 0 damage
-                    damage = 0;
-
-                    CAST_PLR(done_by)->AttackStop();
-                    me->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NON_ATTACKABLE);
-                    me->RemoveAllAuras();
-                    me->DeleteThreatList();
-                    me->CombatStop(true);
-                    me->setFaction(1080);               //friendly
-                    me->SetStandState(UNIT_STAND_STATE_SIT);
-                    DoScriptText(LUMP_DEFEAT, me);
-
-                    bReset = true;
-                }
-            }
-        }
-
-        void EnterCombat(Unit* /*who*/)
-        {
-            if (me->HasAura(SPELL_VISUAL_SLEEP))
-                me->RemoveAura(SPELL_VISUAL_SLEEP);
-
-            if (!me->IsStandState())
-                 me->SetStandState(UNIT_STAND_STATE_STAND);
-
-            DoScriptText(RAND(LUMP_SAY0, LUMP_SAY1), me);
-        }
-
-        void UpdateAI(const uint32 diff)
-        {
-            //check if we waiting for a reset
-            if (bReset)
-            {
-                if (Reset_Timer <= diff)
-                {
-                    EnterEvadeMode();
-                    bReset = false;
-                    me->setFaction(1711);               //hostile
-                    return;
-                }
-                else Reset_Timer -= diff;
-            }
-
-            //Return since we have no target
-            if (!UpdateVictim())
-                return;
-
-            //Spear_Throw_Timer
-            if (Spear_Throw_Timer <= diff)
-            {
-                DoCast(me->getVictim(), SPELL_SPEAR_THROW);
-                Spear_Throw_Timer = 20000;
-            } else Spear_Throw_Timer -= diff;
-
-            DoMeleeAttackIfReady();
-        }
-    };
-
-};
-
-/*######
 ## npc_altruis_the_sufferer
 ######*/
 
@@ -264,10 +59,10 @@ public:
 
     bool OnQuestAccept(Player* player, Creature* /*creature*/, Quest const* /*quest*/)
     {
-        if (!player->GetQuestRewardStatus(9991))              //Survey the Land, q-id 9991
+        if (!player->GetQuestRewardStatus(9991)) // Survey the Land, q-id 9991
         {
             player->CLOSE_GOSSIP_MENU();
-            player->ActivateTaxiPathTo(532);                  //TaxiPath 532
+            player->ActivateTaxiPathTo(532); // TaxiPath 532
         }
         return true;
     }
@@ -339,7 +134,6 @@ public:
 
         return true;
     }
-
 };
 
 /*######
@@ -361,7 +155,7 @@ public:
 #define GOSSIP_SGG10 "It is my Warchief, Greatmother. The leader of my people. From my world. He ... He is the son of Durotan. He is your grandchild."
 #define GOSSIP_SGG11 "I will return to Azeroth at once, Greatmother."
 
-//all the textId's for the below is unknown, but i do believe the gossip item texts are proper.
+// Missing properly sniffed text_id values
 class npc_greatmother_geyah : public CreatureScript
 {
 public:
@@ -400,7 +194,6 @@ public:
                 player->AreaExploredOrEventHappens(10044);
                 player->CLOSE_GOSSIP_MENU();
                 break;
-
             case GOSSIP_ACTION_INFO_DEF + 10:
                 player->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_SGG7, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 11);
                 player->SEND_GOSSIP_MENU(player->GetGossipTextId(creature), creature->GetGUID());
@@ -445,7 +238,6 @@ public:
             player->SEND_GOSSIP_MENU(player->GetGossipTextId(creature), creature->GetGUID());
         }
         else
-
             player->SEND_GOSSIP_MENU(player->GetGossipTextId(creature), creature->GetGUID());
 
         return true;
@@ -453,134 +245,54 @@ public:
 
 };
 
-/*######
-## npc_lantresor_of_the_blade
-######*/
-
-#define GOSSIP_HLB "I have killed many of your ogres, Lantresor. I have no fear."
-#define GOSSIP_SLB1 "Should I know? You look like an orc to me."
-#define GOSSIP_SLB2 "And the other half?"
-#define GOSSIP_SLB3 "I have heard of your kind, but I never thought to see the day when I would meet a half-breed."
-#define GOSSIP_SLB4 "My apologies. I did not mean to offend. I am here on behalf of my people."
-#define GOSSIP_SLB5 "My people ask that you pull back your Boulderfist ogres and cease all attacks on our territories. In return, we will also pull back our forces."
-#define GOSSIP_SLB6 "We will fight you until the end, then, Lantresor. We will not stand idly by as you pillage our towns and kill our people."
-#define GOSSIP_SLB7 "What do I need to do?"
-
-class npc_lantresor_of_the_blade : public CreatureScript
-{
-public:
-    npc_lantresor_of_the_blade() : CreatureScript("npc_lantresor_of_the_blade") { }
-
-    bool OnGossipSelect(Player* player, Creature* creature, uint32 /*uiSender*/, uint32 uiAction)
-    {
-        player->PlayerTalkClass->ClearMenus();
-        switch (uiAction)
-        {
-            case GOSSIP_ACTION_INFO_DEF:
-                player->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_SLB1, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 1);
-                player->SEND_GOSSIP_MENU(9362, creature->GetGUID());
-                break;
-            case GOSSIP_ACTION_INFO_DEF+1:
-                player->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_SLB2, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 2);
-                player->SEND_GOSSIP_MENU(9363, creature->GetGUID());
-                break;
-            case GOSSIP_ACTION_INFO_DEF+2:
-                player->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_SLB3, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 3);
-                player->SEND_GOSSIP_MENU(9364, creature->GetGUID());
-                break;
-            case GOSSIP_ACTION_INFO_DEF+3:
-                player->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_SLB4, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 4);
-                player->SEND_GOSSIP_MENU(9365, creature->GetGUID());
-                break;
-            case GOSSIP_ACTION_INFO_DEF+4:
-                player->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_SLB5, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 5);
-                player->SEND_GOSSIP_MENU(9366, creature->GetGUID());
-                break;
-            case GOSSIP_ACTION_INFO_DEF+5:
-                player->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_SLB6, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 6);
-                player->SEND_GOSSIP_MENU(9367, creature->GetGUID());
-                break;
-            case GOSSIP_ACTION_INFO_DEF+6:
-                player->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_SLB7, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 7);
-                player->SEND_GOSSIP_MENU(9368, creature->GetGUID());
-                break;
-            case GOSSIP_ACTION_INFO_DEF+7:
-                player->SEND_GOSSIP_MENU(9369, creature->GetGUID());
-                if (player->GetQuestStatus(10107) == QUEST_STATUS_INCOMPLETE)
-                    player->AreaExploredOrEventHappens(10107);
-                if (player->GetQuestStatus(10108) == QUEST_STATUS_INCOMPLETE)
-                    player->AreaExploredOrEventHappens(10108);
-                break;
-        }
-        return true;
-    }
-
-    bool OnGossipHello(Player* player, Creature* creature)
-    {
-        if (creature->isQuestGiver())
-            player->PrepareQuestMenu(creature->GetGUID());
-
-        if (player->GetQuestStatus(10107) == QUEST_STATUS_INCOMPLETE || player->GetQuestStatus(10108) == QUEST_STATUS_INCOMPLETE)
-            player->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_HLB, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF);
-
-        player->SEND_GOSSIP_MENU(9361, creature->GetGUID());
-
-        return true;
-    }
-
-};
-
 /*#####
 ## npc_maghar_captive
 #####*/
 
-enum eMagharCaptive
+enum MagharCaptive
 {
-    SAY_MAG_START               = -1000482,
-    SAY_MAG_NO_ESCAPE           = -1000483,
-    SAY_MAG_MORE                = -1000484,
-    SAY_MAG_MORE_REPLY          = -1000485,
-    SAY_MAG_LIGHTNING           = -1000486,
-    SAY_MAG_SHOCK               = -1000487,
-    SAY_MAG_COMPLETE            = -1000488,
-
-    SPELL_CHAIN_LIGHTNING       = 16006,
-    SPELL_EARTHBIND_TOTEM       = 15786,
-    SPELL_FROST_SHOCK           = 12548,
-    SPELL_HEALING_WAVE          = 12491,
-
-    QUEST_TOTEM_KARDASH_H       = 9868,
-
-    NPC_MURK_RAIDER             = 18203,
-    NPC_MURK_BRUTE              = 18211,
-    NPC_MURK_SCAVENGER          = 18207,
-    NPC_MURK_PUTRIFIER          = 18202
+    SAY_MAG_START                   = 0,
+    SAY_MAG_NO_ESCAPE               = 1,
+    SAY_MAG_MORE                    = 2,
+    SAY_MAG_MORE_REPLY              = 3,
+    SAY_MAG_LIGHTNING               = 4,
+    SAY_MAG_SHOCK                   = 5,
+    SAY_MAG_COMPLETE                = 6,
+
+    SPELL_MAG_CHAIN_LIGHTNING       = 16006,
+    SPELL_MAG_EARTHBIND_TOTEM       = 15786,
+    SPELL_MAG_FROST_SHOCK           = 12548,
+    SPELL_MAG_HEALING_WAVE          = 12491,
+
+    QUEST_TOTEM_KARDASH_H           = 9868,
+
+    NPC_MAG_MURK_RAIDER             = 18203,
+    NPC_MAG_MURK_BRUTE              = 18211,
+    NPC_MAG_MURK_SCAVENGER          = 18207,
+    NPC_MAG_MURK_PUTRIFIER          = 18202
 };
 
-static float m_afAmbushA[]= {-1568.805786f, 8533.873047f, 1.958f};
-static float m_afAmbushB[]= {-1491.554321f, 8506.483398f, 1.248f};
+static float AmbushA[]= {-1568.805786f, 8533.873047f, 1.958f};
+static float AmbushB[]= {-1491.554321f, 8506.483398f, 1.248f};
 
 class npc_maghar_captive : public CreatureScript
 {
 public:
     npc_maghar_captive() : CreatureScript("npc_maghar_captive") { }
 
-    bool OnQuestAccept(Player* player, Creature* creature, const Quest* pQuest)
+    bool OnQuestAccept(Player* player, Creature* creature, const Quest* quest)
     {
-        if (pQuest->GetQuestId() == QUEST_TOTEM_KARDASH_H)
+        if (quest->GetQuestId() == QUEST_TOTEM_KARDASH_H)
         {
-            if (npc_maghar_captiveAI* pEscortAI = dynamic_cast<npc_maghar_captiveAI*>(creature->AI()))
+            if (npc_maghar_captiveAI* EscortAI = dynamic_cast<npc_maghar_captiveAI*>(creature->AI()))
             {
                 creature->SetStandState(UNIT_STAND_STATE_STAND);
-                creature->setFaction(232);
-
-                pEscortAI->Start(true, false, player->GetGUID(), pQuest);
-
+                EscortAI->Start(true, false, player->GetGUID(), quest);
                 DoScriptText(SAY_MAG_START, creature);
 
-                creature->SummonCreature(NPC_MURK_RAIDER, m_afAmbushA[0]+2.5f, m_afAmbushA[1]-2.5f, m_afAmbushA[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
-                creature->SummonCreature(NPC_MURK_PUTRIFIER, m_afAmbushA[0]-2.5f, m_afAmbushA[1]+2.5f, m_afAmbushA[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
-                creature->SummonCreature(NPC_MURK_BRUTE, m_afAmbushA[0], m_afAmbushA[1], m_afAmbushA[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
+                creature->SummonCreature(NPC_MAG_MURK_RAIDER, AmbushA[0]+2.5f, AmbushA[1]-2.5f, AmbushA[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
+                creature->SummonCreature(NPC_MAG_MURK_PUTRIFIER, AmbushA[0]-2.5f, AmbushA[1]+2.5f, AmbushA[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
+                creature->SummonCreature(NPC_MAG_MURK_BRUTE, AmbushA[0], AmbushA[1], AmbushA[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
             }
         }
         return true;
@@ -593,41 +305,53 @@ public:
 
     struct npc_maghar_captiveAI : public npc_escortAI
     {
-        npc_maghar_captiveAI(Creature* creature) : npc_escortAI(creature) { Reset(); }
+        npc_maghar_captiveAI(Creature* creature) : npc_escortAI(creature) { }
 
-        uint32 m_uiChainLightningTimer;
-        uint32 m_uiHealTimer;
-        uint32 m_uiFrostShockTimer;
+        uint32 ChainLightningTimer;
+        uint32 HealTimer;
+        uint32 FrostShockTimer;
 
         void Reset()
         {
-            m_uiChainLightningTimer = 1000;
-            m_uiHealTimer = 0;
-            m_uiFrostShockTimer = 6000;
+            ChainLightningTimer = 1000;
+            HealTimer = 0;
+            FrostShockTimer = 6000;
         }
 
         void EnterCombat(Unit* /*who*/)
         {
-            DoCast(me, SPELL_EARTHBIND_TOTEM, false);
+            DoCast(me, SPELL_MAG_EARTHBIND_TOTEM, false);
         }
 
-        void WaypointReached(uint32 uiPointId)
+        void JustDied(Unit* /*killer*/)
         {
-            switch(uiPointId)
+            if (!HasEscortState(STATE_ESCORT_ESCORTING))
+                return;
+
+            if (Player* player = GetPlayerForEscort())
             {
-                case 7:
-                    DoScriptText(SAY_MAG_MORE, me);
+                if (player->GetQuestStatus(QUEST_TOTEM_KARDASH_H) != QUEST_STATUS_COMPLETE)
+                    player->FailQuest(QUEST_TOTEM_KARDASH_H);
+            }
+        }
 
-                    if (Creature* pTemp = me->SummonCreature(NPC_MURK_PUTRIFIER, m_afAmbushB[0], m_afAmbushB[1], m_afAmbushB[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000))
-                        DoScriptText(SAY_MAG_MORE_REPLY, pTemp);
+        void WaypointReached(uint32 PointId)
+        {
+            switch(PointId)
+            {
+                case 7:
+                    Talk(SAY_MAG_MORE);
 
-                    me->SummonCreature(NPC_MURK_PUTRIFIER, m_afAmbushB[0]-2.5f, m_afAmbushB[1]-2.5f, m_afAmbushB[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
+                    if (Creature* temp = me->SummonCreature(NPC_MAG_MURK_PUTRIFIER, AmbushB[0], AmbushB[1], AmbushB[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000))
+                        DoScriptText(SAY_MAG_MORE_REPLY, temp);
 
-                    me->SummonCreature(NPC_MURK_SCAVENGER, m_afAmbushB[0]+2.5f, m_afAmbushB[1]+2.5f, m_afAmbushB[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
-                    me->SummonCreature(NPC_MURK_SCAVENGER, m_afAmbushB[0]+2.5f, m_afAmbushB[1]-2.5f, m_afAmbushB[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
+                    me->SummonCreature(NPC_MAG_MURK_PUTRIFIER, AmbushB[0]-2.5f, AmbushB[1]-2.5f, AmbushB[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
+                    me->SummonCreature(NPC_MAG_MURK_SCAVENGER, AmbushB[0]+2.5f, AmbushB[1]+2.5f, AmbushB[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
+                    me->SummonCreature(NPC_MAG_MURK_SCAVENGER, AmbushB[0]+2.5f, AmbushB[1]-2.5f, AmbushB[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
                     break;
+
                 case 16:
-                    DoScriptText(SAY_MAG_COMPLETE, me);
+                    Talk(SAY_MAG_COMPLETE);
 
                     if (Player* player = GetPlayerForEscort())
                         player->GroupEventHappens(QUEST_TOTEM_KARDASH_H, me);
@@ -639,7 +363,7 @@ public:
 
         void JustSummoned(Creature* summoned)
         {
-            if (summoned->GetEntry() == NPC_MURK_BRUTE)
+            if (summoned->GetEntry() == NPC_MAG_MURK_BRUTE)
                 DoScriptText(SAY_MAG_NO_ESCAPE, summoned);
 
             if (summoned->isTotem())
@@ -651,49 +375,56 @@ public:
 
         }
 
-        void SpellHitTarget(Unit* /*pTarget*/, const SpellInfo* pSpell)
+        void SpellHitTarget(Unit* /*target*/, const SpellInfo* spell)
         {
-            if (pSpell->Id == SPELL_CHAIN_LIGHTNING)
+            if (spell->Id == SPELL_MAG_CHAIN_LIGHTNING)
+            {
+                if (rand()%30)
+                    return;
+
+                Talk(SAY_MAG_LIGHTNING);
+            }
+
+            if (spell->Id == SPELL_MAG_FROST_SHOCK)
             {
-                if (rand()%10)
+                if (rand()%30)
                     return;
 
-                DoScriptText(SAY_MAG_LIGHTNING, me);
+                Talk(SAY_MAG_SHOCK);
             }
         }
 
-        void UpdateAI(const uint32 uiDiff)
+        void UpdateAI(const uint32 diff)
         {
-            npc_escortAI::UpdateAI(uiDiff);
-            if (!me->getVictim())
+            if (!UpdateVictim())
                 return;
 
-            if (m_uiChainLightningTimer <= uiDiff)
+            if (me->HasUnitState(UNIT_STAT_CASTING))
+                return;
+
+            if (ChainLightningTimer <= diff)
             {
-                DoCast(me->getVictim(), SPELL_CHAIN_LIGHTNING);
-                m_uiChainLightningTimer = urand(7000, 14000);
-            }
-            else
-                m_uiChainLightningTimer -= uiDiff;
+                DoCast(me->getVictim(), SPELL_MAG_CHAIN_LIGHTNING);
+                ChainLightningTimer = urand(7000,14000);
+            } else
+                ChainLightningTimer -= diff;
 
             if (HealthBelowPct(30))
             {
-                if (m_uiHealTimer <= uiDiff)
+                if (HealTimer <= diff)
                 {
-                    DoCast(me, SPELL_HEALING_WAVE);
-                    m_uiHealTimer = 5000;
-                }
-                else
-                    m_uiHealTimer -= uiDiff;
+                    DoCast(me, SPELL_MAG_HEALING_WAVE);
+                    HealTimer = 5000;
+                } else
+                    HealTimer -= diff;
             }
 
-            if (m_uiFrostShockTimer <= uiDiff)
+            if (FrostShockTimer <= diff)
             {
-                DoCast(me->getVictim(), SPELL_FROST_SHOCK);
-                m_uiFrostShockTimer = urand(7500, 15000);
-            }
-            else
-                m_uiFrostShockTimer -= uiDiff;
+                DoCast(me->getVictim(), SPELL_MAG_FROST_SHOCK);
+                FrostShockTimer = urand(7500,15000);
+            } else
+                FrostShockTimer -= diff;
 
             DoMeleeAttackIfReady();
         }
@@ -701,159 +432,251 @@ public:
 
 };
 
-/*######
-## npc_creditmarker_visist_with_ancestors
-######*/
+/*#####
+## npc_kurenai_captive
+#####*/
 
-class npc_creditmarker_visit_with_ancestors : public CreatureScript
+enum KurenaiCaptive
+{
+    SAY_KUR_START                   = 0,
+    SAY_KUR_NO_ESCAPE               = 1,
+    SAY_KUR_MORE                    = 2,
+    SAY_KUR_MORE_TWO                = 3,
+    SAY_KUR_LIGHTNING               = 4,
+    SAY_KUR_SHOCK                   = 5,
+    SAY_KUR_COMPLETE                = 6,
+
+    SPELL_KUR_CHAIN_LIGHTNING       = 16006,
+    SPELL_KUR_EARTHBIND_TOTEM       = 15786,
+    SPELL_KUR_FROST_SHOCK           = 12548,
+    SPELL_KUR_HEALING_WAVE          = 12491,
+
+    QUEST_TOTEM_KARDASH_A           = 9879,
+
+    NPC_KUR_MURK_RAIDER             = 18203,
+    NPC_KUR_MURK_BRUTE              = 18211,
+    NPC_KUR_MURK_SCAVENGER          = 18207,
+    NPC_KUR_MURK_PUTRIFIER          = 18202,
+};
+
+static float AmbushC[]= {-1568.805786f, 8533.873047f, 1.958f};
+static float AmbushD[]= {-1491.554321f, 8506.483398f, 1.248f};
+
+class npc_kurenai_captive : public CreatureScript
 {
 public:
-    npc_creditmarker_visit_with_ancestors() : CreatureScript("npc_creditmarker_visit_with_ancestors") { }
+    npc_kurenai_captive() : CreatureScript("npc_kurenai_captive") { }
+
+    bool OnQuestAccept(Player* player, Creature* creature, const Quest* quest)
+    {
+        if (quest->GetQuestId() == QUEST_TOTEM_KARDASH_A)
+        {
+            if (npc_kurenai_captiveAI* EscortAI = dynamic_cast<npc_kurenai_captiveAI*>(creature->AI()))
+            {
+                creature->SetStandState(UNIT_STAND_STATE_STAND);
+                EscortAI->Start(true, false, player->GetGUID(), quest);
+                DoScriptText(SAY_KUR_START, creature);
+
+                creature->SummonCreature(NPC_KUR_MURK_RAIDER, AmbushA[0]+2.5f, AmbushA[1]-2.5f, AmbushA[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
+                creature->SummonCreature(NPC_KUR_MURK_BRUTE, AmbushA[0]-2.5f, AmbushA[1]+2.5f, AmbushA[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
+                creature->SummonCreature(NPC_KUR_MURK_SCAVENGER, AmbushA[0], AmbushA[1], AmbushA[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
+            }
+        }
+        return true;
+    }
 
     CreatureAI* GetAI(Creature* creature) const
     {
-        return new npc_creditmarker_visit_with_ancestorsAI (creature);
+        return new npc_kurenai_captiveAI(creature);
     }
 
-    struct npc_creditmarker_visit_with_ancestorsAI : public ScriptedAI
+    struct npc_kurenai_captiveAI : public npc_escortAI
     {
-        npc_creditmarker_visit_with_ancestorsAI(Creature* c) : ScriptedAI(c) {}
+        npc_kurenai_captiveAI(Creature* creature) : npc_escortAI(creature) { }
 
-        void Reset() {}
+        uint32 ChainLightningTimer;
+        uint32 HealTimer;
+        uint32 FrostShockTimer;
 
-        void EnterCombat(Unit* /*who*/) {}
+        void Reset()
+        {
+            ChainLightningTimer = 1000;
+            HealTimer = 0;
+            FrostShockTimer = 6000;
+        }
 
-        void MoveInLineOfSight(Unit* who)
+        void EnterCombat(Unit* /*who*/)
         {
-            if (!who)
+            DoCast(me, SPELL_KUR_EARTHBIND_TOTEM, false);
+        }
+
+        void JustDied(Unit* /*killer*/)
+        {
+            if (!HasEscortState(STATE_ESCORT_ESCORTING))
                 return;
 
-            if (who->GetTypeId() == TYPEID_PLAYER)
+            if (Player* player = GetPlayerForEscort())
             {
-                if (CAST_PLR(who)->GetQuestStatus(10085) == QUEST_STATUS_INCOMPLETE)
-                {
-                    uint32 creditMarkerId = me->GetEntry();
-                    if ((creditMarkerId >= 18840) && (creditMarkerId <= 18843))
-                    {
-                        // 18840: Sunspring, 18841: Laughing, 18842: Garadar, 18843: Bleeding
-                        if (!CAST_PLR(who)->GetReqKillOrCastCurrentCount(10085, creditMarkerId))
-                            CAST_PLR(who)->KilledMonsterCredit(creditMarkerId, me->GetGUID());
-                    }
-                }
+                if (player->GetQuestStatus(QUEST_TOTEM_KARDASH_A) != QUEST_STATUS_COMPLETE)
+                    player->FailQuest(QUEST_TOTEM_KARDASH_A);
             }
         }
-    };
-
-};
 
-/*######
-## mob_sparrowhawk
-######*/
-
-#define SPELL_SPARROWHAWK_NET 39810
-#define SPELL_ITEM_CAPTIVE_SPARROWHAWK 39812
-
-class mob_sparrowhawk : public CreatureScript
-{
-public:
-    mob_sparrowhawk() : CreatureScript("mob_sparrowhawk") { }
+        void WaypointReached(uint32 PointId)
+        {
+            switch(PointId)
+            {
+                case 3:
+                    Talk(SAY_KUR_MORE);
 
-    CreatureAI* GetAI(Creature* creature) const
-    {
-        return new mob_sparrowhawkAI (creature);
-    }
+                    if (Creature* temp = me->SummonCreature(NPC_KUR_MURK_PUTRIFIER, AmbushB[0], AmbushB[1], AmbushB[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000))
+                        Talk(SAY_KUR_MORE_TWO);
 
-    struct mob_sparrowhawkAI : public ScriptedAI
-    {
+                    me->SummonCreature(NPC_KUR_MURK_PUTRIFIER, AmbushB[0]-2.5f, AmbushB[1]-2.5f, AmbushB[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
+                    me->SummonCreature(NPC_KUR_MURK_SCAVENGER, AmbushB[0]+2.5f, AmbushB[1]+2.5f, AmbushB[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
+                    me->SummonCreature(NPC_KUR_MURK_SCAVENGER, AmbushB[0]+2.5f, AmbushB[1]-2.5f, AmbushB[2], 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 25000);
+                    break;
 
-        mob_sparrowhawkAI(Creature* c) : ScriptedAI(c) {}
+                case 7:
+                    Talk(SAY_KUR_COMPLETE);
 
-        uint32 Check_Timer;
-        uint64 PlayerGUID;
-        bool fleeing;
+                    if (Player* player = GetPlayerForEscort())
+                        player->GroupEventHappens(QUEST_TOTEM_KARDASH_A, me);
 
-        void Reset()
-        {
-            me->RemoveAurasDueToSpell(SPELL_SPARROWHAWK_NET);
-            Check_Timer = 1000;
-            PlayerGUID = 0;
-            fleeing = false;
+                    SetRun();
+                    break;
+            }
         }
-        void AttackStart(Unit* who)
+
+        void JustSummoned(Creature* summoned)
         {
-            if (PlayerGUID)
+            if (summoned->GetEntry() == NPC_KUR_MURK_BRUTE)
+                Talk(SAY_KUR_NO_ESCAPE);
+
+            // This function is for when we summoned enemies to fight - so that does NOT mean we should make our totem count in this!
+            if (summoned->isTotem())
                 return;
 
-            ScriptedAI::AttackStart(who);
+            summoned->RemoveUnitMovementFlag(MOVEMENTFLAG_WALKING);
+            summoned->GetMotionMaster()->MovePoint(0, me->GetPositionX(), me->GetPositionY(), me->GetPositionZ());
+            summoned->AI()->AttackStart(me);
         }
 
-        void EnterCombat(Unit* /*who*/) {}
-
-        void MoveInLineOfSight(Unit* who)
+        void SpellHitTarget(Unit* /*target*/, const SpellInfo* spell)
         {
-            if (!who || PlayerGUID)
-                return;
-
-            if (!PlayerGUID && who->GetTypeId() == TYPEID_PLAYER && me->IsWithinDistInMap(who, 30) && CAST_PLR(who)->GetQuestStatus(10987) == QUEST_STATUS_INCOMPLETE)
+            if (spell->Id == SPELL_KUR_CHAIN_LIGHTNING)
             {
-                PlayerGUID = who->GetGUID();
-                return;
+                if (rand()%30)
+                    return;
+
+                Talk(SAY_KUR_LIGHTNING);
             }
 
-            ScriptedAI::MoveInLineOfSight(who);
+            if (spell->Id == SPELL_KUR_FROST_SHOCK)
+            {
+                if (rand()%30)
+                    return;
+
+                Talk(SAY_KUR_SHOCK);
+            }
         }
 
         void UpdateAI(const uint32 diff)
         {
-            if (Check_Timer <= diff)
+            if (!UpdateVictim())
+                return;
+
+            if (me->HasUnitState(UNIT_STAT_CASTING))
+                return;
+
+            if (ChainLightningTimer <= diff)
             {
-                if (PlayerGUID)
-                {
-                    if (fleeing && me->GetMotionMaster()->GetCurrentMovementGeneratorType() != FLEEING_MOTION_TYPE)
-                        fleeing = false;
+                DoCast(me->getVictim(), SPELL_KUR_CHAIN_LIGHTNING);
+                ChainLightningTimer = urand(7000,14000);
+            } else
+                ChainLightningTimer -= diff;
 
-                    Player* player = Unit::GetPlayer(*me, PlayerGUID);
-                    if (player && me->IsWithinDistInMap(player, 30))
-                    {
-                        if (!fleeing)
-                        {
-                            me->DeleteThreatList();
-                            me->GetMotionMaster()->MoveFleeing(player);
-                            fleeing = true;
-                        }
-                    }
-                    else if (fleeing)
-                    {
-                        me->GetMotionMaster()->MovementExpired(false);
-                        PlayerGUID = 0;
-                        fleeing = false;
-                    }
-                }
-                Check_Timer = 1000;
-            } else Check_Timer -= diff;
+            if (HealthBelowPct(30))
+            {
+                if (HealTimer <= diff)
+                {
+                    DoCast(me, SPELL_KUR_HEALING_WAVE);
+                    HealTimer = 5000;
+                } else
+                    HealTimer -= diff;
+            }
 
-            if (PlayerGUID)
-                return;
+            if (FrostShockTimer <= diff)
+            {
+                DoCast(me->getVictim(), SPELL_KUR_FROST_SHOCK);
+                FrostShockTimer = urand(7500,15000);
+            } else
+                FrostShockTimer -= diff;
 
-            ScriptedAI::UpdateAI(diff);
+            DoMeleeAttackIfReady();
         }
+    };
+};
+
+/*######
+## npc_creditmarker_visist_with_ancestors
+######*/
+
+enum VisitWithAncestorsData
+{
+    CREDIT_SUNSPRING_POST                   = 18840,
+    CREDIT_LAUGHING_SKULL                   = 18841,
+    CREDIT_GARADAR                          = 18842,
+    CREDIT_BLEEDING_CLAN                    = 18843,
+
+    QUEST_A_VISIT_WITH_THE_ANCESTORS        = 10085,
+};
+
+class npc_creditmarker_visit_with_ancestors : public CreatureScript
+{
+public:
+    npc_creditmarker_visit_with_ancestors() : CreatureScript("npc_creditmarker_visit_with_ancestors") { }
 
-        void SpellHit(Unit* caster, const SpellInfo *spell)
+    CreatureAI* GetAI(Creature* creature) const
+    {
+        return new npc_creditmarker_visit_with_ancestorsAI (creature);
+    }
+
+    struct npc_creditmarker_visit_with_ancestorsAI : public ScriptedAI
+    {
+        npc_creditmarker_visit_with_ancestorsAI(Creature* creature) : ScriptedAI(creature) { }
+
+        void Reset() { }
+
+        void EnterCombat(Unit* /*who*/) { }
+
+        void MoveInLineOfSight(Unit* who)
         {
-            if (caster->GetTypeId() == TYPEID_PLAYER)
+            if (!who)
+                return;
+
+            if (who->GetTypeId() == TYPEID_PLAYER)
             {
-                if (spell->Id == SPELL_SPARROWHAWK_NET && CAST_PLR(caster)->GetQuestStatus(10987) == QUEST_STATUS_INCOMPLETE)
+                if (CAST_PLR(who)->GetQuestStatus(QUEST_A_VISIT_WITH_THE_ANCESTORS) == QUEST_STATUS_INCOMPLETE)
                 {
-                    DoCast(caster, SPELL_ITEM_CAPTIVE_SPARROWHAWK, true);
-                    me->DealDamage(me, me->GetHealth(), NULL, DIRECT_DAMAGE, SPELL_SCHOOL_MASK_NORMAL, NULL, false);
-                    me->RemoveFlag(UNIT_DYNAMIC_FLAGS, UNIT_DYNFLAG_LOOTABLE);
+                    // We do not have to list all four credit markers, instead we use a better method
+                    uint32 creditMarkerId = me->GetEntry();
+                    if ((creditMarkerId >= CREDIT_SUNSPRING_POST) && (creditMarkerId <= CREDIT_BLEEDING_CLAN))
+                    {
+                        if (!CAST_PLR(who)->GetReqKillOrCastCurrentCount(QUEST_A_VISIT_WITH_THE_ANCESTORS, creditMarkerId))
+                            CAST_PLR(who)->KilledMonsterCredit(creditMarkerId, me->GetGUID());
+                    }
                 }
             }
-            return;
         }
     };
+
 };
 
+/*######
+## go_corkis_prison
+######*/
+
 enum CorkiData
 {
   // first quest
@@ -932,7 +755,7 @@ public:
 
   struct npc_corkiAI : public ScriptedAI
   {
-      npc_corkiAI(Creature* creature) : ScriptedAI(creature) {}
+      npc_corkiAI(Creature* creature) : ScriptedAI(creature) { }
 
       uint32 Say_Timer;
       bool ReleasedFromCage;
@@ -970,16 +793,53 @@ public:
   };
 };
 
+/*######
+## go_warmaul_prison
+######*/
+
+enum FindingTheSurvivorsData
+{
+    QUEST_FINDING_THE_SURVIVORS                     = 9948,
+    NPC_MAGHAR_PRISONER                             = 18428,
+
+    SAY_FREE_0                                      = 0,
+    SAY_FREE_1                                      = 1,
+    SAY_FREE_2                                      = 2,
+    SAY_FREE_3                                      = 3,
+    SAY_FREE_4                                      = 4,
+};
+
+class go_warmaul_prison : public GameObjectScript
+{
+public:
+    go_warmaul_prison() : GameObjectScript("go_warmaul_prison") { }
+
+    bool OnGossipHello(Player* player, GameObject* go)
+    {
+        if (Creature* prisoner = go->FindNearestCreature(NPC_MAGHAR_PRISONER, 1.0f))
+        {
+            if (prisoner)
+            {
+                go->UseDoorOrButton();
+                if (player)
+                    player->KilledMonsterCredit(NPC_MAGHAR_PRISONER, 0);
+
+                prisoner->AI()->Talk(RAND(SAY_FREE_0, SAY_FREE_1, SAY_FREE_2, SAY_FREE_3, SAY_FREE_4), player->GetGUID());
+                prisoner->ForcedDespawn(6000);
+            }
+        }
+        return true;
+    }
+};
+
 void AddSC_nagrand()
 {
-    new mob_shattered_rumbler();
-    new mob_lump();
     new npc_altruis_the_sufferer();
     new npc_greatmother_geyah();
-    new npc_lantresor_of_the_blade();
     new npc_maghar_captive();
+    new npc_kurenai_captive();
     new npc_creditmarker_visit_with_ancestors();
-    new mob_sparrowhawk();
     new npc_corki();
     new go_corkis_prison();
+    new go_warmaul_prison();
 }